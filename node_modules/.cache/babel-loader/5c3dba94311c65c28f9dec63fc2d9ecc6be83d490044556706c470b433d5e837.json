{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Projetyacine\\\\agence-voyage\\\\src\\\\pages\\\\ReservationDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport { loadStripe } from '@stripe/stripe-js';\n\n// Initialise Stripe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\nconst GET_RESERVATION = gql`\n  query GetReservation($id: ID!) {\n    reservation(id: $id) {\n      id\n      destination\n      nom\n      prenom\n      email\n    }\n  }\n`;\nexport default function ReservationDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_RESERVATION, {\n    variables: {\n      id\n    }\n  });\n  const [msg, setMsg] = useState(null);\n  const handleConfirm = async () => {\n    try {\n      const resp = await fetch(`${process.env.REACT_APP_API_URL}/create-checkout-session/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          reservation_id: id\n        })\n      });\n      if (!resp.ok) {\n        const text = await resp.text();\n        throw new Error(text || 'Erreur serveur');\n      }\n\n      // Ton backend renvoie actuellement { url: \"...stripe...\" }\n      const {\n        url\n      } = await resp.json();\n      window.location.href = url;\n\n      // Si tu veux utiliser redirectToCheckout avec sessionId,\n      // il faudra modifier ton backend pour renvoyer { sessionId }\n    } catch (e) {\n      console.error(e);\n      setMsg(`Erreur : ${e.message}`);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erreur : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"R\\xE9servation pour \", data.reservation.destination]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-600\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirm,\n      className: \"bg-yellow-400 px-4 py-2 rounded\",\n      children: \"Confirmer et payer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ReservationDetail, \"K0uLz6llj/i+Ubfp3MbW6pvf+pQ=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = ReservationDetail;\nvar _c;\n$RefreshReg$(_c, \"ReservationDetail\");","map":{"version":3,"names":["React","useState","gql","useQuery","useParams","loadStripe","jsxDEV","_jsxDEV","stripePromise","process","env","REACT_APP_STRIPE_KEY","GET_RESERVATION","ReservationDetail","_s","id","data","loading","error","variables","msg","setMsg","handleConfirm","resp","fetch","REACT_APP_API_URL","method","headers","credentials","body","JSON","stringify","reservation_id","ok","text","Error","url","json","window","location","href","e","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","reservation","destination","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Projetyacine/agence-voyage/src/pages/ReservationDetail.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { useParams } from 'react-router-dom';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\n// Initialise Stripe\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY!);\r\n\r\nconst GET_RESERVATION = gql`\r\n  query GetReservation($id: ID!) {\r\n    reservation(id: $id) {\r\n      id\r\n      destination\r\n      nom\r\n      prenom\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function ReservationDetail() {\r\n  const { id } = useParams<{ id: string }>();\r\n  const { data, loading, error } = useQuery(GET_RESERVATION, { variables: { id } });\r\n  const [msg, setMsg] = useState<string | null>(null);\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const resp = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/create-checkout-session/`,\r\n        {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          credentials: 'include',\r\n          body: JSON.stringify({ reservation_id: id }),\r\n        }\r\n      );\r\n\r\n      if (!resp.ok) {\r\n        const text = await resp.text();\r\n        throw new Error(text || 'Erreur serveur');\r\n      }\r\n\r\n      // Ton backend renvoie actuellement { url: \"...stripe...\" }\r\n      const { url } = await resp.json();\r\n      window.location.href = url;\r\n\r\n      // Si tu veux utiliser redirectToCheckout avec sessionId,\r\n      // il faudra modifier ton backend pour renvoyer { sessionId }\r\n    } catch (e: any) {\r\n      console.error(e);\r\n      setMsg(`Erreur : ${e.message}`);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Chargement…</p>;\r\n  if (error) return <p>Erreur : {error.message}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Réservation pour {data.reservation.destination}</h1>\r\n      {msg && <p className=\"text-red-600\">{msg}</p>}\r\n      <button\r\n        onClick={handleConfirm}\r\n        className=\"bg-yellow-400 px-4 py-2 rounded\"\r\n      >\r\n        Confirmer et payer\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}